- name: metal_vlan
  module_defaults:
    equinix.cloud.metal_vlan:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_vlan_info:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_project:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_project_info:
      metal_api_token: '{{ metal_api_token }}'
      metal_ua_prefix: '{{ metal_ua_prefix }}'
  block:
    - set_fact:
        test_resource_name_prefix: 'ansible-integration-test-vlan'
    - set_fact:
        unique_id: "{{ lookup('community.general.random_string', upper=false, numbers=false, special=false) }}"
    - set_fact:
        test_prefix: "{{ test_resource_name_prefix }}-{{ unique_id }}"
    - set_fact:
        test_metro: 'am'
    - set_fact:
        test_description: 'My new VLAN'
    - set_fact:
        test_vxlan: 123
    - set_fact:
        vlan_tags: ["a", "b", "c", "d"]

    - name: create project for test
      equinix.cloud.metal_project:
        name: "{{ test_prefix }}-project"
      register: project

    - name: create first vlan for test
      equinix.cloud.metal_vlan:
        project_id: "{{ project.id }}"
        metro: "{{ test_metro }}"
        description: "{{ test_description }}"
        vxlan: "{{ test_vxlan }}"
      register: first_vlan

    - assert:
        that:
          - first_vlan.vxlan == test_vxlan

    - name: get vlan info
      equinix.cloud.metal_vlan_info:
        project_id: "{{ project.id }}"
      register: vlan_info_listed

    - assert:
        that:
          - "vlan_info_listed.resources | length == 1"
          - vlan_info_listed.resources[0].id == first_vlan.id

    - name: fetch existing vlan
      equinix.cloud.metal_vlan:
        id: "{{ first_vlan.id }}"
      register: first_vlan_fetched

    - name: delete vlan
      equinix.cloud.metal_vlan:
        id: "{{ first_vlan.id }}"
        state: absent

    - name: delete vlan again to check indempotence
      equinix.cloud.metal_vlan:
        id: "{{ first_vlan.id }}"
        state: absent

    - name: create vlan with tags
      equinix.cloud.metal_vlan:
        project_id: "{{ project.id }}"
        metro: "{{ test_metro }}"
        description: "{{ test_description }}"
        tags: "{{ vlan_tags }}"
      register: second_vlan

    - assert:
        that:
          - second_vlan.vxlan != 0
          - second_vlan.tags | length != 0

    - name: fetch existing vlan with tags
      equinix.cloud.metal_vlan:
        project_id: "{{ project.id }}"
        tags: "{{ vlan_tags }}"
      register: second_vlan_fetched

    - assert:
        that:
          - second_vlan_fetched.id ==  second_vlan.id
          - second_vlan_fetched.vxlan ==  second_vlan.vxlan
          - second_vlan_fetched.tags | length == second_vlan.tags | length

    - name: delete vlan with tags
      equinix.cloud.metal_vlan:
        project_id: "{{ project.id }}"
        tags: "{{ vlan_tags }}"
        state: absent

    - name: delete vlan with tags again to check indempotence
      equinix.cloud.metal_vlan:
        project_id: "{{ project.id }}"
        tags: "{{ vlan_tags }}"
        state: absent

  always:
    - name: Announce teardown start
      debug:
        msg: "***** TESTING COMPLETE. COMMENCE TEARDOWN *****"

    - name: list test projects
      equinix.cloud.metal_project_info:
        name: "{{ test_prefix }}"
      register: test_projects_listed

    - name: delete test projects
      equinix.cloud.metal_project:
        id: "{{ item.id }}"
        state: absent
      loop: "{{ test_projects_listed.resources }}"
      ignore_errors: yes